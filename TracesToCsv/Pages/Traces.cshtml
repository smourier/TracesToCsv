@page "{id}/{*url}"
@using TracesToCsv
@model TracesToCsv.Pages.TracesModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Traces To Csv</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="//cdn.datatables.net/2.3.4/css/dataTables.dataTables.min.css" />
    <link rel="stylesheet" href="//cdn.datatables.net/buttons/3.2.5/css/buttons.dataTables.min.css" />
    <link rel="stylesheet" href="//cdn.datatables.net/select/3.1.0/css/select.dataTables.min.css" />
    <script src="//code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="//cdn.datatables.net/2.3.4/js/dataTables.min.js"></script>
    <script src="//cdn.datatables.net/select/3.1.0/js/dataTables.select.min.js"></script>
    <script src="//cdn.datatables.net/select/3.1.0/js/select.dataTables.min.js"></script>
    <script src="//cdn.datatables.net/buttons/3.2.5/js/dataTables.buttons.min.js"></script>
    <script src="//cdn.datatables.net/buttons/3.2.5/js/buttons.dataTables.min.js"></script>
    <style>
        body {
            margin: 20px;
            font-family: Consolas;
            font-size: 14px;
        }

        #help {
            display: none;
        }

        #show:target #help {
            display: inline-block;
        }

        #show:target #show {
            display: none;
        }
    </style>
</head>
<body>

    <h1>Traces To CSV </h1>
    <hr />

    <div id="show">
        <a href="#show" id="show">Show Help</a>
        <div id="help">
            <a href="#hide" id="hide">Hide Help</a>
            <p>id @Model.Id.ToString("N"), API Key: @Model.Key</p>
            <p>To create a trace, PUT a JSON object to "http://server/traces/&lt;API Key&gt/subPaths" (subPaths are optional) using this JSON schema:</p>
            <pre>
{
    "level": "info",   // required. level of trace, can be "error" or 1, "warning" or 2, "info" or 3, "verbose" or 4
    "message": "blah", // optional. a message
    "values": {        // optional. a dictionary of values
        "some bool": true,
        "a value": 1234.5677,
        "dummy": "hello world"
    },
    "timestamp": "2025-09-19T11:13:53.6160989+00:00", // required. client timestamp
}

Soon after JSON digestion, a CSV file will be created or appended with new traces.
The server responds to trace creation with an id (string) that you can correlate with a line in resulting CSV file.</pre>
        </div>
    </div>
    <div>
        <table id="traces" class="table table-striped display compact">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Length</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Folder.IsRoot)
                {
                    <tr>
                        <td>&nbsp;</td>
                        <td><a href="/Traces/@Model.Folder.ParentFullName">..</a></td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                }

                @foreach (var item in Model.Folder.Entries.Order())
                {
                    <tr>
                        <th>@item.Name</th>
                        @if (item is TraceFile file)
                        {
                            <td><a href="/Traces/@item.FullName">@item.Name</a></td>
                            <td>@file.Length</td>
                            <td nowrap>@file.LastWriteTimeUtc</td>
                        }
                        else
                        {
                            <td><a href="/Traces/@item.FullName">@item.Name</a></td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                        }
                    </tr>
                }
            </tbody>
        </table>

        <script type="text/javascript">
            const table = new DataTable('#traces', {
                order: [],
                select: true,
                layout: {
                    topStart: {
                        buttons: [
                            {
                                text: 'Select all rows',
                                action: function () {
                                    table.rows().select();
                                }
                            },
                            {
                                text: 'Unselect all rows',
                                action: function () {
                                    table.rows().deselect();
                                }
                            },
                            {
                                text: 'Delete selected rows()',
                                action: async function () {
                                    const data = table.rows({ selected: true }).data();
                                    await fetch('/Traces/delete/@Model.Folder.FullName.Replace('\\', '/')', {
                                          method: 'POST',
                                          headers: { 'Content-Type': 'application/json; charset=utf-8'},
                                          body: JSON.stringify(data.pluck(0).toArray())
                                    })
                                    window.location.reload();
                                },
                                enabled: false
                            }
                        ]
                    }
                }
            });
            table.column(0).visible(false);
            table.on('select deselect', function () {
                var selectedRows = table.rows({ selected: true }).count();

                table.button(2).enable(selectedRows > 0);
            });
        </script>
    </div>
</body>
</html>
